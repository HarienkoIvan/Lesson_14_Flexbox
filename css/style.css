
/* Обнуление стилей */
*,
*::before *::after {
    margin: 0;
    padding: 0;
    border: 0;
    box-sizing: border-box;
}

li {
    list-style: none;
}
 
a:visited {
    text-decoration: none;
}

a:hover {
    text-decoration: none;
}


h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: inherit;
    font-size: inherit;
}

img {
    vertical-align: top;
}

html,body {
    height: 100%;
}

/* По умолчанию 16 рх */
html {
    font-size: 16px;
}

body {
  line-height: 1;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 30px;
} 
 
.wrapper {
    min-height: 100%;  
    overflow: hidden;
    padding: 50px;
}

/* .........14........ */

/* Flexbox - это целый модуль, содержащий в себе набор свойств и их значений как
для родителя flex-контейнера так и для его дочерних элементов flex-элементов.
Основным преимуществом гибкой Flex разметки является возможность изменять
ширину/высоту пространства вокруг и порядок flex-элементов, для того чтобы наилучшим
образом заполнить доступное пространство flex-контейнера.
*/

/* Флекс-контейнер */
.block {
    border: 10px solid #794f45;

    /* Включение флекс-модуля */
    display: flex;


/* Определяет смогут ли flex-элементы перемещаться на следующие строки когда
перестают помещаться внутри flex-контейнера.
По- умолчанию - nowrap
-nowrap
Снос запрещен. Гибкие элементы выстраиваются в одну линию. Без задания.
-wrap
Гибкие элементы выстраиваются в несколько строк, их направление задается свойством flex-direction.
-wrap-reverse
Гибкие элементы выстраиваются в несколько строк, в противоположном направлении flex-direction.
-initial
Устанавливает это свойство в значении без задания
-inherit
Унаследует значение свойства от своего родительского элемента
*/
flex-wrap: wrap;


/*justify-content Определяет выравнивание вдоль ОСНОВНОЙ оси( направление зависит от значения
свойства flex-direction)

space-evenly - поровну между обьектами.
-flex-start
Элементы расположены в начале контейнера. Значение без задания.
-flex-end
Элементы расположены в конце контейнера.
-center
Элементы расположены в центре контейнера.
-space-between
Флексы равномерно распределяются по всей строчке. Первый и последний флекс прижимаются к соответствующим краям контейнера.
-space-around
Флексы умеренно распределяются по всей строке. Пустое пространство перед первым и после последнего элементов равно половине пространства между двумя соседними элементами.
-initial
Устанавливает это свойство в значении без задания.
-inherit
Наследует значение свойства своего родительского элемента.
*/
justify-content: flex-start; 


/* align-items Определяет выравнивание вдоль ПОПЕРЧНОЙ оси (направление зависит от значения 
свойства flex-direction) (сверху вниз)
/*

-stretch
Элементы растягиваются и занимают все доступное пространство контейнера.
-center
Элементы расположены по центру контейнера.
-flex-start
Элементы расположены в начале контейнера.
-flex-end
Элементы расположены в конце контейнера.
-baseline
Элементы расположены на базовой линии контейнера.
-initial
Устанавливает свойство в значении без задания
-inherit
Указывает на наследственность свойства от своего родительского элемента (если соответствующее свойство установлено)

/* stretch обьекты соответствуют друг другу (по умолчанию) */
align-items: stretch;

}

.block__element {
    border: 10px solid #7a956d;
    padding: 20px;
    font-size: 30px;
    color: #be9696;
}
 
/* ----------------- */

.block2 {
    border: 10px solid #794f45;
    display: flex;
margin-top: 10px;
justify-content: flex-start;
align-items: stretch;
    /* Устанавливает основную ось, таким образом определяет направление flex-элементов 
расположеных в flex-контейнере.

-row
Главная ось направлена ​​так же, как и ориентация текста, по умолчанию слева направо. Если значение dirзадано как rtl, то направление оси обстоит справа налево.
-row-reverse
Похоже на значение row, но меняются местами начальная и конечная точки и главная ось направлена ​​справа налево. Если значение dirзадано как rtl, то направление оси идет слева направо.
-column
Флекс элементы отображаются в виде столбика. Столбик формируется сверху вниз.
-column-reverse
Главная ось располагается вертикально, но меняется положение начальной и конечной точек и ось направлена ​​снизу вверх.
-initial
Устанавливает это свойство в значении без задания

*/
flex-direction: column;

/* Управляет расстояниями (разрывом) между флекс-элементами */
/* gap: row-gap (по-вертикали) между рядами
column-gap (по-горизонтали) между колонками */
gap: 10px;

}




.block2__element:nth-child(2) {
font-size: 40px;
}

/* Флекс-элемент */
.block2__element {
    border: 10px solid #7a956d;
    padding: 20px;
    font-size: 30px;
    color: #be9696;
}


/* ------------------------- */

.block3 {
    border: 10px solid #794f45;
    display: flex;
    margin-top: 10px;
}


.block3__element {
    border: 10px solid #7a956d;
    padding: 20px;
    font-size: 30px;
    color: #be9696;
}

.block3__element:nth-child(2) {
font-size: 40px;
}

.block__element_align {
    /* Переопределяет для конкретного flex-элемента выравнивание вдоль поперечной 
    оси (направление зависит от значения свойств flex-direction).
    auto
Элемент наследует родительское значение свойства align-items. Если отца не имеет значения установится – stretch. Без задания.
-stretch
Элемент растягивается и занимает все доступное пространство контейнера.
-center
Элемент размещается по центру контейнера.
-flex-start
Элемент размещается в начале контейнера.
-flex-end
Элемент размещается в конце контейнера.
-baseline
Элемент выравнивается по базовой линии контейнера.
-initial
Устанавливает свойство в значении без задания
-inherit
Указывает на наследственность свойства от своего родительского элемента (если соответствующее свойство установлено)
    */
    align-self: flex-end;

/* Определяет выравнивание вдоль поперечной оси, при наличии свободного пространства 
и элементы расположены в 2 или более строки (направление зависит от значения 
свойства flex-direction)
*/
/* -stretch
Строки растягиваются, чтобы заполнить свободное пространство. Без задания.
-center
Строки выравниваются по центру резинового контейнера.
-flex-start
Строки располагаются в начале поперечной оси.
-flex-end
Строки располагаются с конца поперечной оси.
-space-between
Строки равномерно распределяются в резиновом контейнере. Первая строка находится в начале контейнера, а последняя находится в конце.
-space-around
Строки равномерно распределены с равными расстояниями между ними.
Пустое пространство перед первой строкой и после последней строки равно половине пространства между двумя соседними строками.
-initial
Устанавливает свойство в значении без задания
-inherit
Указывает на наследственность свойства своего родительского элемента. */
/* align-content: stretch; */


}


/* --------------------- */
.block4 {
    border: 10px solid #794f45;
    display: flex;
    margin-top: 10px; 
flex-wrap: wrap; 
/* Чтоб перестраивать обьекты flex-wrap: wrap; должен быть включен */

}


.block4__element {
   border: 10px solid #7a956d;
    padding: 20px;
    font-size: 30px;
    color: #be9696; 
   flex: 0 0 33.333%;
}


.block__element_first {
    
/* flex-basis, flex-grow, flex-shrink эти три свойства как правило идут всегда вместе. */
/* Определяет размер элемента по-умолчанию, до распределения оставшегося пространства.
Значение могут быть в процентах, пикселях и т.д
*/
/* flex-basis: 200px; */

/* Определяет возможность элемента увеличиваться  размере, при необходимости заполнять весь
flex-контейнер. 
0 запрещено увеличиваться.
1 разрешено.
*/
/* flex-grow: 0; */

/* Определяет возможность элемента уменьшаться в размере, при необходимости заполнять весь 
flex-контейнер.
0 запрещено.
1 разрешено.
/* 
flex-shrink: 1 ; 


/* Универсальное средство. 
Определяет возможность элемента уменьшаться и увеличиваться в размере, при необходимости 
заполняя весь flex-контейнер (0-запрещено, 1-разрешено). А также задает базовый размер.
*/

/* flex: 0 0 200px; */
}



/* ---------------- */


.block5 {
    border: 10px solid #794f45;
    display: flex;
    margin-top: 10px; 
flex-wrap: wrap; 
gap: 0px;
}

.block5__element { border: 10px solid #7a956d;
    padding: 20px;
    font-size: 30px;
    color: #be9696; 
}

/* order Управляет порядком, в которром распологаются flex-элементы внутри flex-контейнера */

.block5__element:nth-child(1){
    order: 2;
}

.block5__element:nth-child(2){
    order: 1;
}

.block5__element:nth-child(3){
    order: 3;
}
